[{"authors":null,"categories":null,"content":"I am a mathematics undergraduate from Latin America.\nThe last 50 years have been the most fruitful ones, despite having existed for more than 2000 years, for Mathematical Music Theory, the discipline which studies connections between math and music.\nIn light of that, the goal of this blog is to share some of the ways in which those fields of study intersect.\n","date":1554595200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1554595200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://lucio-cornejo.github.io/author/lucio-cornejo/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/lucio-cornejo/","section":"authors","summary":"I am a mathematics undergraduate from Latin America.\nThe last 50 years have been the most fruitful ones, despite having existed for more than 2000 years, for Mathematical Music Theory, the discipline which studies connections between math and music.","tags":null,"title":"Lucio Cornejo","type":"authors"},{"authors":null,"categories":null,"content":"\r\r\r\r\r\r\r\rThis post is not finished.\rI’ll continue updating it.\n\n(The graphs work better if you to open this page not in your cellphone)\n\nI am going to describe the surprisingly interesting musical phenomenon which\rfirst piqued my interest into how, from certain simple musical questions,\runexpected patterns and relationships can emerge and even be partially explained\rthrough mathematics. However, to make sure that non-musicians can get something\rout of this post, I’ll begin describing such musical phenomenon from a mathematical perspective.\nConsider the following experiment:\nPick any circle.\rChoose a chord finite amount of points contained in that circle.\rTranspose Rotate each of those notes points, along the chosen circle,\rby the same amount and in equal direction (clockwise or anticlowise).\rWe’ll discuss this step later in the post, but the main idea of the following graphs is that every point which has been colored corresponds to a chord finite set of points in the circle, which satisfies the main property that I’ll explain at length later in this post.\r\rNow comes the good stuff …\nfrom __future__ import division\rimport numpy as np\rimport math\r###### OBTENER LOS ACORDES NECESARIOS PARA EL CASO ANY FINITE CHORD SIZE ######\rdef ordenamiento(lista):\r# Let\u0026#39;s assume that lista is already sorted\r# and that it has at least two elements.\rtemporal = []\rfor i in range(len(lista)-1):\rtemporal.append([lista[0],lista[i+1]])\rreturn temporal\rdef acordes(lista,longitud_acorde):\r# Let\u0026#39;s assume that lista is already sorted\r# and that it has at least two elements.\r# It holds acordes(lista,2) = ordenamiento(lista) .\rif longitud_acorde == 2:\rreturn ordenamiento(lista) else:\rtemporal = acordes(lista[1:],-1+longitud_acorde)\rfor i in temporal:\ri.insert(0,lista[0]) for j in range(2,len(lista)-1,1):\rtemp = acordes(lista[j:],-1+longitud_acorde)\rfor i in temp:\ri.insert(0,lista[0]) temporal = temporal + temp\rreturn temporal\r################# GRAFICAR EN BASE AL CONTRARY MOTION DEGREE #################\rmetric = -1 # Common musical sense of distance.\rEDO = 360\rdef arclenght(a,b):\rtemp = b%(2*np.pi)-a\rif abs(temp)\u0026gt;np.pi:\rif temp\u0026gt;0:\rtemp = temp - 2*np.pi\relse:\rtemp = temp + 2*np.pi\rreturn temp\rdef dist(a,b,metric):\rif metric == -1:\rreturn arclenght(a,b) if metric == -2:\r# Voice leading trigonometric formula\rreturn math.acos(np.cos(b-a))\rif metric == -3:\r# Directional arc lenght trigonometric formula\rreturn 2*math.atan(np.tan((b-a)/2.0))\rif metric == -4:\r# Euclidean type metrics\r#blank = (np.cos(a)-np.cos(b))**power + (np.sin(a)-np.sin(b))**power\r#return pow(blank,1.0/power)\rblank = [abs(np.cos(a)-np.cos(b)),abs(np.sin(a)-np.sin(b))]\rreturn max(blank)\rdef CPM(theta,Y,metric): # Cyclic permutations matrix m = len(Y)\rT = [(Y[i]+theta) for i in range(m)]\rGT = []\rGT.append(T)\rfor i in range(1,m,1):\rtemp = [T[(k+i)%m] for k in range(m)]\rGT.append(temp)\rmat = [[] for k in range(m)]\rfor i in range(m):\rfor j in range(m):\rmat[i].append(dist(Y[j],GT[i][j],metric))\rif abs(theta-np.pi)\u0026lt;0.001:\rfor j in range(m):\rmat[0][j] = abs(mat[0][j])\r# This is kinda unnecesary seems the minimum\r# voice leading will probably not happen\r# with the voice motion of the first row,\r# because that\u0026#39;s the most spread out voice leading\r# out of all the cases of the GT.\rVL = [0 for i in range(m)] RS = [0 for i in range(m)]\rminimal = 0\rfor i in range(m):\rfor j in range(m):\rVL[i] = VL[i] + abs(mat[i][j])\rRS[i] = RS[i] + mat[i][j]\rif VL[i] \u0026lt; VL[minimal]:\rminimal = i\r# Convert radians into the appropiate EDO tuning system\rrescale_1 = [i*(EDO/(2*np.pi)) for i in VL]\rrescale_2 = [i*(EDO/(2*np.pi)) for i in RS]\r# Contrary Motion Degree\rCMD = [rescale_1[i]-abs(rescale_2[i]) for i in range(m)] return [rescale_1,CMD,minimal]\rdef graphic_data(chord_size,rotation,even_uno,even_dos,partition_precision):\rchord_size = int(chord_size) partition_precision = int(partition_precision)\reven_uno = int(even_uno)\reven_dos = int(even_dos)\rtemp = chord_size*partition_precision\raxis_X = [i*((2*np.pi)/temp) for i in range(0,temp,1)]\rrotation = rotation*(np.pi/180)\rchords = acordes(axis_X,chord_size)\r# List positions of most even chord of chord_size notes:\r# n*partition_precision, for n in {0,1,2, ... ,chord_size}\redo_angle_1 = axis_X[even_uno*partition_precision]\redo_angle_2 = axis_X[even_dos*partition_precision]\rif chord_size == 5:\rchords = [chords[i] for i in range(len(chords)) if edo_angle_1 in chords[i] ]\relif chord_size == 6:\rchords = [chords[i] for i in range(len(chords)) if (edo_angle_1 in chords[i]) and (edo_angle_2 in chords[i]) ]\rareas = []\rarea_size = 1\rresults = []\rminimum_voice_leadings = []\rfor i in range(len(chords)):\rtemp = CPM(rotation,chords[i],metric)\rminimum_voice_leadings.append(temp[0][temp[2]])\rresults.append(temp[1][temp[2]]) #########################################\rif abs(results[i])\u0026lt;0.001:\rareas.append(area_size)\relse:\rareas.append(0)\r# Positions related to the chords with contrary motion during such voice leading\rpositions = []\rfor i in range(len(areas)):\rif areas[i] == 1: positions.append(i)\r# Relevant voice leadings\rminimum_voice_leadings = [minimum_voice_leadings[i] for i in positions]\rrotation = round(rotation*(180/np.pi),3) # From radians to degress\rif chord_size == 2:\r# Convert radians to EDO semitones\raxis_X = [ chords[i][1]*(EDO/(2*np.pi)) for i in positions ]\raxis_Y = [ 0 for i in positions ]\raxis_Z = [ 0 for i in positions ]\relif chord_size == 3:\r# Convert radians to EDO semitones\raxis_X = [ chords[i][2]*(EDO/(2*np.pi)) for i in positions ]\raxis_Y = [ chords[i][1]*(EDO/(2*np.pi)) for i in positions ]\raxis_Z = [ 0 for i in positions ] # minimum_voice_leadings\relif chord_size == 4:\r# Convert radians to EDO semitones\raxis_X = [ chords[i][3]*(EDO/(2*np.pi)) for i in positions ]\raxis_Y = [ chords[i][2]*(EDO/(2*np.pi)) for i in positions ] axis_Z = [ chords[i][1]*(EDO/(2*np.pi)) for i in positions ]\relif chord_size == 5:\rfor i in chords:\ri.remove(edo_angle_1)\raxis_X = [ chords[i][3]*(EDO/(2*np.pi)) for i in positions ]\raxis_Y = [ chords[i][2]*(EDO/(2*np.pi)) for i in positions ]\raxis_Z = [ chords[i][1]*(EDO/(2*np.pi)) for i in positions ]\relif chord_size == 6:\rfor i in chords:\ri.remove(edo_angle_1)\ri.remove(edo_angle_2)\raxis_X = [ chords[i][3]*(EDO/(2*np.pi)) for i in positions ]\raxis_Y = [ chords[i][2]*(EDO/(2*np.pi)) for i in positions ]\raxis_Z = [ chords[i][1]*(EDO/(2*np.pi)) for i in positions ]\rreturn [axis_X,axis_Y,axis_Z,minimum_voice_leadings,EDO,chord_size,rotation]\r\r\nReader: Ok, so what the hell was that?\nAuthor: Yeah … sorry for the spoilers. Now I’ll provide the necessary background to understand step 4.\n\n\rVisual examples\rFrom a musical perspective, we’ll be dealing with chords (finite collections\rof at least two distinct notes) and their transpositions (translating them by some distance),\rbut, from a mathematical perspective, we only need to follow the already mentioned\rsteps 1, 2 and 3.\nWe’ll work with the unitary circle, the circle with radius 1 and whose\rcenter is the origin of the Cartesian Plane.\rEach point in the unitary circle can be thought of as a possible musical note,\rif we conveniently match them.\nIn that sense, let’s work with the following pairing:\n\r\r\rNote\r\r\rC\r\r\rDb\r\r\rD\r\r\rEb\r\r\rE\r\r\rF\r\r\rGb\r\r\rG\r\r\rAb\r\r\rA\r\r\rBb\r\r\rB\r\r\r\r\rAngle\r\r\r$ (0/12)*360^{°} $\r\r\r$ (1/12)*360^{°} $\r\r\r$ (2/12)*360^{°} $\r\r\r$ (3/12)*360^{°} $\r\r\r$ (4/12)*360^{°} $\r\r\r$ (5/12)*360^{°} $\r\r\r$ (6/12)*360^{°} $\r\r\r$ (7/12)*360^{°} $\r\r\r$ (8/12)*360^{°} $\r\r\r$ (9/12)*360^{°} $\r\r\r$ (10/12)*360^{°}$\r\r\r$ (11/12)*360^{°}$\r\r\r\rLet’s start with a simple case: The major chord\nConsider the C major chord, {C, E, G}, which we can represent in the Cartesian\rPlane as the following set of points:\nC : \\(\\left(\\cos(0^{°}),\\sin(0^{°})\\right)\\)\nE : \\(\\left(\\cos(120^{°}),\\sin(120^{°})\\right)\\)\nG : \\(\\left(\\cos(210^{°}),\\sin(210^{°})\\right)\\)\nNow, let’s rotate each of those three points by \\(60^{°}\\) with respect to the\rorigin, as we can see in the following animation (click it), where the initial\rpoints shown correspond to the notes C, E and G, in that order:\n\nFrom a musical perspective, we’ve transposed the C major chord by 2 semitones\rand landed on D major, but, mathematically, we can think of having rotated it.\nThe set of trajectories that the notes from C major take along the unitary circle\rto get to the notes in D major is called the voice leading\rbetween C major and D major.\nLet me clarify that the voice leadings which we’ll be dealing with in this post are precisely those which satisfy that no pair of distinct notes from the initial chord end up at the same note in the transposed chord. In that sense, when we tranpose/rotate any\rchord made up of \\(n\\) notes, the number of possible voice leadings between such\rchord and its transposition is precisely\r\\(n! = n\\cdot(n-1)\\cdot(\\dots)\\cdot 2 \\cdot 1 \\enspace\\).\n\nGoing back to our concrete case, let’s see some voice leading examples for the\rtransposition from C major to D major:\n\nNotice from the video that the trajectories which define the voice leading correspond\rto the shortest of the two paths that a point could have taken to get to the other.\rIn the case where both paths have the same length, that is, for a \\(180^{°}\\)\rrotation, we’ll choose, as a convention, the anticlockwise trajectory\rto be a part of the voice leading.\nIn this post, we’ll focus on two properties that we’d like a voice leading (VL)\rbetween a chord and some of its transpositions to have:\nThe sum of the length of the trajectories which define VL, also known as the voice leading size, is the smallest one out of all the possible voice leadings between the initial chord and its transposition. Any voice leading which satisfies this property is said to be a minimal voice leading.\rThe trajectories which define VL share the same direction, that is, they are\rall clockwise or all anticlockwise. Any voice leading which satisfies this\rproperty is said to have no contrary motion.\r\rPartly, what I’ve shown you in the initial graphs is which chords, of some fixed\rchord size, satisfy that after transposing/rotating them by a certain amount,\rthere exists a voice leading, between the initial and transposed chord, that is\ra minimal voice leading and has no contrary motion. If some chord satisfies\rsuch property, we’ll say that it has an unidirectional minimal voice leading.\nI wouldn’t blame you if you were just thinking the following:\r“Why would a minimal voice leading be unidirectional?.\rThe properties 1. and 2. do NOT seem related at all”.\rYou’d be partly right, in fact, because the property 1. deals with\rminimizing trajectory lenghts, while the property 2. refers only to such\rtrajectory’s directions.\nHowever, both properties happen to be fairly related; and even extremely related\rwhen we focus on \\(180^{°}\\) rotations of chords, a situation where symmetry\rarises with respect to the possible voice leadings. But, such connection will\rbe explored in the next post because that’s a deep subject as well.\n\nLet’s get back to our example, rotating the C major chord, {C,E,G},\rby \\(60^{°}\\). Does it exist an unidirectional minimal voice leading in that case?\nAfter checking by hand the \\(3! = 6\\) possible voice leadings,\rwe actually find two unidirectional minimal voice leadings, precisely\rthe ones labeled in the second video of this post\ras voice leading 1, which is comprised of anticlockwise trajectories,\rand voice leading 3, which is comprised of clockwise trajectories.\nCurious fact: Due to C major having only three distinct notes, we actually\ronly needed to check three special kinds of voice leadings in order to find\rone which is, at least, a minimal voice leading.\rThe theorem that allows such an inmense reduction in the number of voice\rleadings that we need to check in order to find a minimal voice leading will\rplay a key role in the next post.\n\n\rPutting it all together\rUyuyui.\nWe are 90% ready to understand the graphs shown previously.\nThe first step is to choose a chord size, that is, the amount\rof distinct points in a circle that we will be rotating afterwards.\nThe second step is to chose some rotation that we will apply to\rchords with a size already chosen.chosen.\n\nThanks for reading!\rThis one post took a huge amount of work, so I am glad you made it till here.\n\r","date":1623974400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624006466,"objectID":"113666394fdd3876ac437d797b2b3100","permalink":"https://lucio-cornejo.github.io/post/a-glimpse-into-the-world-of-voice-leading/","publishdate":"2021-06-18T00:00:00Z","relpermalink":"/post/a-glimpse-into-the-world-of-voice-leading/","section":"post","summary":"This post is not finished.\rI’ll continue updating it.\n\n(The graphs work better if you to open this page not in your cellphone)","tags":null,"title":"A glimpse into the world of Voice Leading","type":"post"},{"authors":null,"categories":[],"content":"\r\rUseful links for this new adventure\r\rLa Matemática en la Música\n\rMatemática en la Musicología\n\rMatemáticas y música: perspectivas a través del tiempo\n\rVoice leading lecture series\n\rThe Distance Geometry of Music\n\rMathematical Music Theory Blog\n\rScale Theory, Serial Theory and Voice Leading\n\rAspects of Well-Formed Scales\n\rThe Group-Theoretic Description of 12-Fold and Microtonal Pitch Systems\n\rLa Teoria de Números y la Teoría de Grupos en el estudio de escalas musicales microtonales\n\rEssential Neo-Riemannian Theory for Today’s Musician\n\rAxiomatic Scale Theory\n\r\r\r","date":1623974400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624005108,"objectID":"d91578592be75010e6bdb4c627a931b3","permalink":"https://lucio-cornejo.github.io/post/getting-started/","publishdate":"2021-06-18T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Useful links for this new adventure","tags":[],"title":"Getting started","type":"post"},{"authors":["Lucio Cornejo"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://lucio-cornejo.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://lucio-cornejo.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Lucio Cornejo","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://lucio-cornejo.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Lucio Cornejo","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://lucio-cornejo.github.io/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://lucio-cornejo.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]